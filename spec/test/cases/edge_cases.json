[
  {
    "name": "empty_objects",
    "description": "Diff between empty objects",
    "category": "edge_cases",
    "content_a": "{}",
    "content_b": "{}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "empty_arrays",
    "description": "Diff between empty arrays",
    "category": "edge_cases",
    "content_a": "[]",
    "content_b": "[]",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "null_values",
    "description": "Diff with null values",
    "category": "edge_cases",
    "content_a": "{\"a\": null}",
    "content_b": "{\"a\": null}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "null_to_value",
    "description": "Change null to actual value",
    "category": "edge_cases",
    "content_a": "{\"a\": null}",
    "content_b": "{\"a\": \"value\"}",
    "expected_diff": "@ [\"a\"]\n- null\n+ \"value\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "value_to_null",
    "description": "Change value to null",
    "category": "edge_cases",
    "content_a": "{\"a\": \"value\"}",
    "content_b": "{\"a\": null}",
    "expected_diff": "@ [\"a\"]\n- \"value\"\n+ null\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "deeply_nested",
    "description": "Deeply nested structure changes",
    "category": "edge_cases",
    "content_a": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":\"old\"}}}}}",
    "content_b": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":\"new\"}}}}}",
    "expected_diff": "@ [\"a\",\"b\",\"c\",\"d\",\"e\"]\n- \"old\"\n+ \"new\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "special_characters_keys",
    "description": "Object keys with special characters",
    "category": "edge_cases",
    "content_a": "{\"key with spaces\": 1, \"key/with/slashes\": 2}",
    "content_b": "{\"key with spaces\": 2, \"key/with/slashes\": 2}",
    "expected_diff": "@ [\"key with spaces\"]\n- 1\n+ 2\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "unicode_keys",
    "description": "Unicode characters in object keys",
    "category": "edge_cases",
    "content_a": "{\"키\": \"값1\"}",
    "content_b": "{\"키\": \"값2\"}",
    "expected_diff": "@ [\"키\"]\n- \"값1\"\n+ \"값2\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "large_numbers",
    "description": "Very large number values",
    "category": "edge_cases",
    "content_a": "{\"big\": 9007199254740991}",
    "content_b": "{\"big\": 9007199254740992}",
    "expected_diff": "@ [\"big\"]\n- 9007199254740991\n+ 9007199254740992\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "scientific_notation",
    "description": "Numbers in scientific notation",
    "category": "edge_cases",
    "content_a": "{\"sci\": 1e10}",
    "content_b": "{\"sci\": 2e10}",
    "expected_diff": "@ [\"sci\"]\n- 10000000000\n+ 20000000000\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "floating_point_precision",
    "description": "Floating point precision edge case - these numbers are equal due to floating point representation",
    "category": "edge_cases",
    "content_a": "{\"float\": 0.1}",
    "content_b": "{\"float\": 0.10000000000000001}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "zero_variants",
    "description": "Different representations of zero",
    "category": "edge_cases",
    "content_a": "{\"zero\": 0}",
    "content_b": "{\"zero\": 0.0}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "negative_zero",
    "description": "Negative zero handling",
    "category": "edge_cases", 
    "content_a": "{\"nz\": 0}",
    "content_b": "{\"nz\": -0}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "escaped_strings",
    "description": "Strings with escape sequences",
    "category": "edge_cases",
    "content_a": "{\"escaped\": \"line1\\nline2\\ttab\"}",
    "content_b": "{\"escaped\": \"line1\\nline2\\tmodified\"}",
    "expected_diff": "@ [\"escaped\"]\n- \"line1\\nline2\\ttab\"\n+ \"line1\\nline2\\tmodified\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "unicode_escape",
    "description": "Unicode escape sequences",
    "category": "edge_cases",
    "content_a": "{\"unicode\": \"\\u0048\\u0065\\u006c\\u006c\\u006f\"}",
    "content_b": "{\"unicode\": \"Hello\"}",
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "core"
  },
  {
    "name": "mixed_array_types",
    "description": "Array with mixed value types",
    "category": "edge_cases",
    "content_a": "[1, \"string\", true, null, {\"obj\": \"val\"}]",
    "content_b": "[1, \"string\", false, null, {\"obj\": \"val\"}]",
    "expected_diff": "@ [2]\n  \"string\"\n- true\n+ false\n  null\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "array_index_beyond_bounds",
    "description": "Array operations beyond current bounds",
    "category": "edge_cases",
    "content_a": "[1, 2]",
    "content_b": "[1, 2, 3, 4, 5]",
    "expected_diff": "@ [2]\n  2\n+ 3\n+ 4\n+ 5\n]\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "empty_string_key",
    "description": "Object with empty string as key",
    "category": "edge_cases",
    "content_a": "{\"\": \"empty_key\"}",
    "content_b": "{\"\": \"modified_empty_key\"}",
    "expected_diff": "@ [\"\"]\n- \"empty_key\"\n+ \"modified_empty_key\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "single_element_array",
    "description": "Array with single element modification",
    "category": "edge_cases",
    "content_a": "[\"only\"]",
    "content_b": "[\"changed\"]",
    "expected_diff": "@ [0]\n[\n- \"only\"\n+ \"changed\"\n]\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "array_to_empty",
    "description": "Array becomes empty",
    "category": "edge_cases",
    "content_a": "[1, 2, 3]",
    "content_b": "[]",
    "expected_diff": "@ [0]\n[\n- 1\n- 2\n- 3\n]\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "empty_to_array",
    "description": "Empty array gets elements",
    "category": "edge_cases",
    "content_a": "[]",
    "content_b": "[1, 2, 3]",
    "expected_diff": "@ [0]\n[\n+ 1\n+ 2\n+ 3\n]\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "duplicate_object_keys_set",
    "description": "Objects with duplicate keys in set mode",
    "category": "edge_cases",
    "content_a": "[{\"id\": 1, \"name\": \"A\"}, {\"id\": 1, \"name\": \"B\"}]",
    "content_b": "[{\"id\": 1, \"name\": \"C\"}]",
    "args": ["-setkeys=id"],
    "expected_diff": "^ {\"setkeys\":[\"id\"]}\n@ [{\"id\":1},\"name\"]\n- \"A\"\n+ \"C\"\n@ [1]\n- {\"id\":1,\"name\":\"B\"}\n",
    "expected_exit": 1,
    "compliance_level": "extended"
  },
  {
    "name": "set_with_null_values",
    "description": "Set operations with null values",
    "category": "edge_cases",
    "content_a": "[null, 1, null, 2]",
    "content_b": "[1, null, 3]",
    "args": ["-set"],
    "expected_diff": "^ \"SET\"\n@ [{}]\n- 2\n+ 3\n",
    "expected_exit": 1,
    "compliance_level": "extended"
  },
  {
    "name": "multiset_duplicate_counting",
    "description": "Multiset properly counts duplicates",
    "category": "edge_cases",
    "content_a": "[1, 1, 1, 2, 2]",
    "content_b": "[1, 1, 2, 2, 2, 3]",
    "args": ["-mset"],
    "expected_diff": "^ \"MULTISET\"\n@ [[]]\n- 1\n+ 2\n+ 3\n",
    "expected_exit": 1,
    "compliance_level": "extended"
  },
  {
    "name": "precision_edge_boundary",
    "description": "Precision exactly at boundary",
    "category": "edge_cases",
    "content_a": "{\"val\": 1.0}",
    "content_b": "{\"val\": 1.1}",
    "args": ["-precision=0.1"],
    "expected_diff": "",
    "expected_exit": 0,
    "compliance_level": "extended"
  },
  {
    "name": "precision_just_over_boundary",
    "description": "Precision just over boundary",
    "category": "edge_cases",
    "content_a": "{\"val\": 1.0}",
    "content_b": "{\"val\": 1.10001}",
    "args": ["-precision=0.1"],
    "expected_diff": "^ {\"precision\":0.1}\n@ [\"val\"]\n- 1\n+ 1.10001\n",
    "expected_exit": 1,
    "compliance_level": "extended"
  },
  {
    "name": "very_long_string",
    "description": "Very long string values",
    "category": "edge_cases",
    "content_a": "{\"long\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}",
    "content_b": "{\"long\": \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"}",
    "expected_diff": "@ [\"long\"]\n- \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n+ \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n",
    "expected_exit": 1,
    "compliance_level": "core"
  },
  {
    "name": "object_key_with_quotes",
    "description": "Object keys containing quote characters",
    "category": "edge_cases",
    "content_a": "{\"key\\\"with\\\"quotes\": 1}",
    "content_b": "{\"key\\\"with\\\"quotes\": 2}",
    "expected_diff": "@ [\"key\\\"with\\\"quotes\"]\n- 1\n+ 2\n",
    "expected_exit": 1,
    "compliance_level": "core"
  }
]